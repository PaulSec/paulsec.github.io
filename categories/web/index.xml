<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on </title>
    <link>http://paulsec.github.io/categories/web/</link>
    <description>Recent content in Web on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jun 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://paulsec.github.io/categories/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Diving into XSS googles game</title>
      <link>http://paulsec.github.io/posts/diving-into-xss-googles-game/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      <guid>http://paulsec.github.io/posts/diving-into-xss-googles-game/</guid>
      <description>Hi there, this post deals with the game released by Google few days ago about XSS vulnerabilities that you can find here.&#xA;I&amp;rsquo;ll enumerate some of the solution I found on the Internet which were (in my opnion) interesting/fun. This post contains the solutions for all levels. Big spoil.&#xA;Level 1: Hello, world of XSS Well, this one was obvious:&#xA;&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt; Level 2: Persistence is key For this one, you had different options:</description>
    </item>
  </channel>
</rss>
