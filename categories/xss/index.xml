<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xss on </title>
    <link>http://paulsec.github.io/categories/xss/</link>
    <description>Recent content in Xss on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jun 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://paulsec.github.io/categories/xss/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Diving into XSS googles game</title>
      <link>http://paulsec.github.io/posts/diving-into-xss-googles-game/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      <guid>http://paulsec.github.io/posts/diving-into-xss-googles-game/</guid>
      <description>&lt;p&gt;Hi there, this post deals with the game released by Google few days ago about XSS vulnerabilities that you can find &lt;a href=&#34;https://xss-game.appspot.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll enumerate some of the solution I found on the Internet which were (in my opnion) interesting/fun.&#xA;This post contains the solutions for all levels. &lt;strong&gt;Big spoil.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;level-1-hello-world-of-xss&#34;&gt;Level 1: Hello, world of XSS&lt;/h2&gt;&#xA;&lt;p&gt;Well, this one was obvious:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/script&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;level-2-persistence-is-key&#34;&gt;Level 2: Persistence is key&lt;/h2&gt;&#xA;&lt;p&gt;For this one, you had different options:&lt;/p&gt;</description>
    </item>
    <item>
      <title>XSS Callback</title>
      <link>http://paulsec.github.io/posts/xss-callback/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      <guid>http://paulsec.github.io/posts/xss-callback/</guid>
      <description>&lt;p&gt;This post deals with a project I developed : &lt;a href=&#34;https://github.com/PaulSec/XSS-Callback/&#34;&gt;XSS Callback&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This is not going to be (at least, I hope) a boring post about XSS exploitation. No.&lt;/p&gt;&#xA;&lt;p&gt;Well, one scenario of using XSS would be to steal victim&amp;rsquo;s cookie and access the page through his session.&#xA;This technique is called &lt;strong&gt;Session Hijacking&lt;/strong&gt;. Ok fair enough.&lt;/p&gt;&#xA;&lt;p&gt;However, some issues are present using this technique, let&amp;rsquo;s take an example :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You target a website&lt;/li&gt;&#xA;&lt;li&gt;Unfortunately, it&amp;rsquo;s too late (or too early depending on your situation) and you go to sleep.&lt;/li&gt;&#xA;&lt;li&gt;You wake up in the night and there are loads of victims&amp;rsquo;s sessions. Great !&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The only problem : the user &lt;em&gt;might have logged out of the platform&lt;/em&gt; &lt;strong&gt;or&lt;/strong&gt; there might be a &lt;em&gt;timeout on the session&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
